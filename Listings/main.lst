C51 COMPILER V9.60.0.0   MAIN                                                              12/26/2020 11:23:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\ABDULLAH\BFE\Embedded system\programms\programsFiles\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BR
                    -OWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include "Ports.h"
   3          #include "Interrupt.h"
   4          #include "Delay.h"
*** WARNING C318 IN LINE 4 OF main.c: can't open file 'Delay.h'
   5          #include "DataTypes.h"
   6          
   7          #define TIMER_COUNTER 50
   8          
   9          tWord ticks=0;
  10          typedef enum {red, yellow, green} states;
  11          states curState=red;
  12          
  13          
  14          void initialization();
  15          void operation();
  16          void GOTO_SLEEP();
  17          
  18          void main(void){
  19   1        initialization();
  20   1        operation();
  21   1      }
  22          
  23          /* The function to save power of the uProcessor during the periods of interrupt */
  24          void GOTO_SLEEP(){
  25   1        PCON |=1; // power down mode
  26   1      }
  27          
  28          /* The function used to initialize variables as input and output and also to initialize the timer */
  29          void initialization(){
  30   1        //ButtonPort=0xff;
  31   1        redPin=0;
  32   1        yellowPin=0;
  33   1        greenPin=0;
  34   1        
  35   1        // TIMER 2
  36   1        T2CON = 0x04;     // Load Timer 2 Control Register
  37   1        TH2 = 0x3C;       // Load Timer 2 high byte
  38   1        RCAP2H = 0x3C;    // Load Timer 2 reload Capt. reg. high byte
  39   1        TL2 = 0xB0;       // Load Timer 2 Low byte
  40   1        RCAP2L = 0xB0;    // Load Timer 2 reload Capt. reg. low byte
  41   1        TR2 = 1;          // Start Timer 2
  42   1        IT0 = 1;          // EX0 INT0 Edge Triggred
  43   1        IE=0xA5;          // 1010 0000 TO Enabel Timer 2 Interrupt INT0 and INT1
  44   1      
  45   1      }
  46          
  47          
  48          
  49          // ISR TIMER 2
  50          void InterruptTimer2_ISR() interrupt InterruptTimer2{
  51   1        TF2 = 0;
  52   1        //if (isOk==true){
  53   1        //if(ticks>TIMER_COUNTER){
C51 COMPILER V9.60.0.0   MAIN                                                              12/26/2020 11:23:00 PAGE 2   

  54   1          switch(curState){
  55   2            case red:
  56   2              redPin=1;
  57   2              if((ticks++)==TIMER_COUNTER){
  58   3                curState=yellow;
  59   3                redPin=0;
  60   3                yellowPin=1;
  61   3                greenPin=0;
  62   3                ticks=0;
  63   3              }
  64   2              //}
  65   2              break;
  66   2            case yellow:
  67   2              yellowPin=1;
  68   2              if((ticks++)==TIMER_COUNTER){
  69   3                curState=green;
  70   3                redPin=0;
  71   3                yellowPin=0;
  72   3                greenPin=1;
  73   3                ticks=0;
  74   3              }
  75   2              break;
  76   2              case green:
  77   2              greenPin=1;
  78   2              if((ticks++)==TIMER_COUNTER){
  79   3                curState=red;
  80   3                redPin=1;
  81   3                yellowPin=0;
  82   3                greenPin=0;
  83   3                ticks=0;
  84   3              }
  85   2              break;
  86   2            default:
  87   2              redPin=0;
  88   2              yellowPin=0;
  89   2              greenPin=0;
  90   2          }
  91   1          /*
  92   1        }else{
  93   1          ticks++;
  94   1          }*/
  95   1        //}
  96   1      }
  97             
  98          
  99          void operation(){
 100   1        while(1)
 101   1          GOTO_SLEEP();
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    168    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
